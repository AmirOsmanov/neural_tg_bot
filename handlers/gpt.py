import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from services.openai_client import ask_chatgpt
from handlers.basic import get_main_menu_keyboard

logger = logging.getLogger(__name__)

GPT_MODE = range(1)

async def start_gpt(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø—É—Å–∫ –¥–∏–∞–ª–æ–≥–∞ —Å ChatGPT"""
    user = update.effective_user
    logger.info(f"{user.first_name} ({user.id}) –Ω–∞—á–∞–ª –æ–±—â–µ–Ω–∏–µ —Å ChatGPT")

    if update.message:  # –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ /gpt
        await update.message.reply_text(
            "üß† ChatGPT –∞–∫—Ç–∏–≤–µ–Ω.\n\n–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
            parse_mode='HTML'
        )
    elif update.callback_query:  # –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
        query = update.callback_query
        await query.answer()
        await query.message.delete()
        await context.bot.send_message(
            chat_id=query.from_user.id,
            text="üß† ChatGPT –∞–∫—Ç–∏–≤–µ–Ω.\n\n–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
            parse_mode='HTML'
        )

    return GPT_MODE

async def handle_gpt_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º–µ ChatGPT"""
    user = update.effective_user
    user_input = update.message.text
    logger.info(f"{user.first_name} ({user.id}) –Ω–∞–ø–∏—Å–∞–ª: {user_input}")

    try:
        response = await ask_chatgpt(user_input)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ ChatGPT: {e}")
        response = "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    keyboard = [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="gpt_to_menu")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        response,
        reply_markup=reply_markup
    )

    return GPT_MODE

async def return_to_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()
    await query.message.edit_text(
        "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:",
        parse_mode="HTML",
        reply_markup=get_main_menu_keyboard()
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞ –∏ –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ ChatGPT"""
    user = update.effective_user
    logger.info(f"{user.first_name} ({user.id}) –≤—ã—à–µ–ª –∏–∑ ChatGPT")
    await update.message.reply_text("‚ùå –í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ ChatGPT.")
    return ConversationHandler.END
