"""
handlers.cook
=============

–ú–æ–¥—É–ª—å ¬´üë®‚Äçüç≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ–Ω—é¬ª.

–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–ª—É—á–∏—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ChatGPT-–æ–º **—Å–µ–º–∏–¥–Ω–µ–≤–Ω—ã–π
—Ä–∞—Ü–∏–æ–Ω** –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é —Å—É—Ç–æ—á–Ω—É—é –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞
inline-–∫–Ω–æ–ø–∫–∞—Ö:

1. `/cook` –∏–ª–∏ –∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ–Ω—é¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é ‚ûú –≤—ã–±–æ—Ä –ª–∏–º–∏—Ç–∞ –∫–∫–∞–ª.
2. –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ–Ω—é –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞:
   ¬´üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ª–∏–º–∏—Ç¬ª –∏–ª–∏ ¬´üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª.

–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è
–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤–Ω—É—Ç—Ä–∏ Telegram CallbackQuery; `context.user_data`
–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
"""

import logging
from telegram import Update
from telegram.ext import (
    ContextTypes,
    CommandHandler,
    CallbackQueryHandler,
)
from services import ui
from services.openai_client import get_week_menu

logger = logging.getLogger(__name__)
IMAGE = "images/cook.jpg"
READY = "‚úÖ –ú–µ–Ω—é –≥–æ—Ç–æ–≤–æ! –°–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∏–∂–µ üëá"


async def _show_limits(update: Update, *, edit: bool = False):
    """
        –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏.

        Parameters
        ----------
        update : telegram.Update
            –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏–±–æ `effective_message`, –ª–∏–±–æ
            `callback_query` –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è).
        edit : bool, default=False
            * `False` ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å **–Ω–æ–≤–æ–µ** —Å–æ–æ–±—â–µ–Ω–∏–µ-–∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
            * `True`  ‚Äî **–∑–∞–º–µ–Ω–∏—Ç—å** –ø–æ–¥–ø–∏—Å—å/–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
              —Å–æ–æ–±—â–µ–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ ¬´üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ª–∏–º–∏—Ç¬ª).

        Side Effects
        ------------
        ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π `IMAGE`.
        ‚Ä¢ –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî —á–∏—Å—Ç—ã–π I/O.
    """
    caption = "üìã –ü–æ–¥–±–æ—Ä –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –∫–∫–∞–ª:"
    kb = ui.get_cook_kcal_keyboard()

    if edit:
        await update.callback_query.edit_message_caption(
            caption, reply_markup=kb, parse_mode="Markdown"
        )
    else:
        await update.effective_message.reply_photo(
            IMAGE, caption=caption, reply_markup=kb, parse_mode="Markdown"
        )


async def start_cook(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
        –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã `/cook` –∏–ª–∏ callback-–∫–Ω–æ–ø–∫–∏ ¬´–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ–Ω—é¬ª.

        –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç `_show_limits`, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä
        –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏. –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É —Ñ—É–Ω–∫—Ü–∏—è
        –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `None`.

        Parameters
        ----------
        update : telegram.Update
            –°–æ–±—ã—Ç–∏–µ Telegram (–∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ callback).
        context : telegram.ext.ContextTypes.DEFAULT_TYPE
            –ö–æ–Ω—Ç–µ–∫—Å—Ç PTB. –ó–¥–µ—Å—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø–æ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ.
    """
    await _show_limits(update)


async def kcal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π.

        ‚Ä¢ –ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∏—Å–ª–æ –∏–∑ callback-data (`cook_kcal:<N>`).
        ‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç ¬´‚è≥ –ì–æ—Ç–æ–≤–ª—é –º–µ–Ω—é‚Ä¶¬ª.
        ‚Ä¢ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –º–µ–Ω—é —É OpenAI (`services.openai_client.get_week_menu`).
        ‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
        ‚Ä¢ –û–±–Ω–æ–≤–ª—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ ¬´‚úÖ –ú–µ–Ω—é –≥–æ—Ç–æ–≤–æ!¬ª.

        Parameters
        ----------
        update : telegram.Update
            Callback —Å –¥–∞–Ω–Ω—ã–º–∏ –≤–∏–¥–∞ `cook_kcal:2000`.
        context : telegram.ext.ContextTypes.DEFAULT_TYPE
            –ö–æ–Ω—Ç–µ–∫—Å—Ç PTB (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è).
    """
    q = update.callback_query
    await q.answer()
    kcal = int(q.data.split(":")[1])

    await q.edit_message_caption(
        f"‚è≥ –ì–æ—Ç–æ–≤–ª—é –º–µ–Ω—é –Ω–∞ {kcal} –∫–∫–∞–ª/–¥–µ–Ω—å‚Ä¶",
        parse_mode="Markdown",
    )

    try:
        menu = await get_week_menu(kcal)
    except Exception as exc:                        # noqa: BLE001
        logger.exception("Menu error: %s", exc)
        menu = "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é."

    await q.edit_message_caption(
        READY, reply_markup=ui.get_cook_result_keyboard(),
        parse_mode="Markdown",
    )
    await q.message.reply_text(menu, parse_mode="Markdown")


async def back(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
        Callback-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ¬´üîÑ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ª–∏–º–∏—Ç¬ª.

        –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç `_show_limits(edit=True)`, —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å—å –∏
        –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏, –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤–æ–≥–æ.

        Parameters
        ----------
        update : telegram.Update
            Callback —Å data = `cook_back`.
        context : telegram.ext.ContextTypes.DEFAULT_TYPE
            PTB-–∫–æ–Ω—Ç–µ–∫—Å—Ç (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è).
    """
    await update.callback_query.answer()
    await _show_limits(update, edit=True)


def register_handlers(app):
    app.add_handler(CommandHandler("cook", start_cook))

    app.add_handler(CallbackQueryHandler(start_cook,
                                         pattern=f"^{ui.CB_COOK}$"))

    app.add_handler(CallbackQueryHandler(kcal,
                                         pattern=rf"^{ui.CB_COOK_PREFIX}:\d+$"))

    app.add_handler(CallbackQueryHandler(back,
                                         pattern=f"^{ui.CB_COOK_BACK}$"))
