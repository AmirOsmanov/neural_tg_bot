"""–§–∞–π–ª —Å —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏ –±–æ—Ç–∞ (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)."""

import logging
import asyncio
from telegram import Update
from telegram.ext import ContextTypes
from services.ui import get_main_menu_keyboard

logger = logging.getLogger(__name__)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    reply_markup = get_main_menu_keyboard()
    welcome_text = (
        "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n"
        "üöÄ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        "‚Ä¢ –†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç ‚Äî –ø–æ–ª—É—á–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "‚Ä¢ ChatGPT ‚Äî –æ–±—â–µ–Ω–∏–µ —Å –ò–ò\n"
        "‚Ä¢ –î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é ‚Äî –≥–æ–≤–æ—Ä–∏ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –ª—é–¥—å–º–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n"
        "‚Ä¢ –ö–≤–∏–∑ ‚Äî –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–µ–Ω—é ‚Äî –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–µ–ª—å–Ω–æ–π –ø–æ–¥–±–æ—Ä–∫–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    await update.message.reply_text(welcome_text, parse_mode="HTML", reply_markup=reply_markup)


async def menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ ¬´–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ¬ª –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    query = update.callback_query
    await query.answer()

    # 1) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ¬´–†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç¬ª ‚Äî —É—Ö–æ–¥–∏–º –≤ random_fact_callback, –∞ –∑–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ return
    if query.data == "random_fact":
        return

    # 2) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ¬´ChatGPT¬ª ‚Äî ConversationHandler —Å–∞–º –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç —ç—Ç–æ—Ç callback (–º—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–¥–µ—Å—å)
    if query.data == "gpt_run":
        return

    # 3) –ï—Å–ª–∏ ‚Äü–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚Äù (talk, quiz, cook) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é —Å–ø—É—Å—Ç—è 2 —Å–µ–∫
    if query.data in ["talk_coming_soon", "quiz_coming_soon", "cook_coming_soon"]:
        await query.edit_message_text(
            "üöß <b>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!</b>\n\n"
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö.\n"
            "–ü–æ–∫–∞ —á—Ç–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ '–†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç'!",
            parse_mode="HTML",
        )
        await asyncio.sleep(2)
        await start_menu_again(query)


async def start_menu_again(query):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–∑–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)."""
    reply_markup = get_main_menu_keyboard()
    await query.edit_message_text(
        "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:",
        parse_mode="HTML",
        reply_markup=reply_markup,
    )
