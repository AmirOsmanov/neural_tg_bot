# handlers/random.py

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from services.ui import get_main_menu_keyboard
from services.openai_client import get_random_fact

logger = logging.getLogger(__name__)


async def random_fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /random:
    1) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ "images/random.jpg" —Å –ø–æ–¥–ø–∏—Å—å—é ¬´–ì–µ–Ω–µ—Ä–∏—Ä—É—é...¬ª
    2) –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∫—Ç –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å —Ç–æ–≥–æ –∂–µ —Ñ–æ—Ç–æ, –¥–æ–±–∞–≤–ª—è—è –∫–Ω–æ–ø–∫–∏.
    """
    user = update.effective_user
    chat_id = update.effective_chat.id
    logger.info(f"{user.first_name} ({user.id}) –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /random")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
    try:
        photo_message = await context.bot.send_photo(
            chat_id=chat_id,
            photo=open("images/random.jpg", "rb"),
            caption="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç... ‚è≥"
        )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å random.jpg: {e}")
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, –º–æ–∂–Ω–æ —É–π—Ç–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º:
        placeholder = await context.bot.send_message(
            chat_id=chat_id,
            text="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç... ‚è≥"
        )
        photo_message = None  # –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–µ –±—ã–ª–æ —Ñ–æ—Ç–æ

    # –î–æ—Å—Ç–∞—ë–º —Å–∞–º —Ñ–∞–∫—Ç
    try:
        fact = await get_random_fact()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞ –æ—Ç OpenAI: {e}")
        fact = "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç."

    # –ì–æ—Ç–æ–≤–∏–º –∫–Ω–æ–ø–∫–∏ ¬´–•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç¬ª / ¬´–ó–∞–∫–æ–Ω—á–∏—Ç—å¬ª
    keyboard = [
        [InlineKeyboardButton("üé≤ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç", callback_data="random_more")],
        [InlineKeyboardButton("üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="random_finish")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if photo_message:
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å —Ñ–æ—Ç–æ
        await photo_message.edit_caption(
            caption=f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
            parse_mode="HTML",
            reply_markup=reply_markup
        )
    else:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º placeholder
        await placeholder.edit_text(
            f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
            parse_mode="HTML",
            reply_markup=reply_markup
        )

    logger.info(f"{user.first_name} ({user.id}) –ø–æ–ª—É—á–∏–ª —Ñ–∞–∫—Ç")


async def random_fact_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫:
      ‚Ä¢ random_more  ‚Äì ¬´–•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç¬ª
      ‚Ä¢ random_finish ‚Äì ¬´–ó–∞–∫–æ–Ω—á–∏—Ç—å¬ª
      ‚Ä¢ random_fact   ‚Äì ¬´–†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç¬ª (–ø—Ä–∏ –∫–ª–∏–∫–µ –∏–∑ –º–µ–Ω—é)
    """
    query = update.callback_query
    await query.answer()
    user = query.from_user
    data = query.data
    logger.info(f"{user.first_name} ({user.id}) –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: {data}")

    if data in ["random_more", "random_fact"]:
        # 1. –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ñ–æ—Ç–æ+–∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —Ç–µ–∫—Å—Ç)
        try:
            await query.message.delete()
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        chat_id = query.from_user.id

        # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–Ω–æ–≤–æ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é ¬´–ì–µ–Ω–µ—Ä–∏—Ä—É—é...¬ª
        try:
            photo_message = await context.bot.send_photo(
                chat_id=chat_id,
                photo=open("images/random.jpg", "rb"),
                caption="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç... ‚è≥"
            )
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å random.jpg: {e}")
            placeholder = await context.bot.send_message(
                chat_id=chat_id,
                text="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç... ‚è≥"
            )
            photo_message = None

        # 3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–∫—Ç
        try:
            fact = await get_random_fact()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–∫—Ç–∞ –æ—Ç OpenAI: {e}")
            fact = "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç."

        # 4. –ö–Ω–æ–ø–∫–∏ —Å–Ω–æ–≤–∞
        keyboard = [
            [InlineKeyboardButton("üé≤ –•–æ—á—É –µ—â—ë —Ñ–∞–∫—Ç", callback_data="random_more")],
            [InlineKeyboardButton("üè† –ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="random_finish")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # 5. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –∏–ª–∏ —Ç–µ–∫—Å—Ç
        if photo_message:
            await photo_message.edit_caption(
                caption=f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
                parse_mode="HTML",
                reply_markup=reply_markup
            )
        else:
            await placeholder.edit_text(
                f"üß† <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</b>\n\n{fact}",
                parse_mode="HTML",
                reply_markup=reply_markup
            )

        logger.info(f"{user.first_name} ({user.id}) –ø–æ–ª—É—á–∏–ª —Ñ–∞–∫—Ç")

    elif data == "random_finish":
        # 1. –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ñ–æ—Ç–æ+–∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —Ç–µ–∫—Å—Ç)
        try:
            await query.message.delete()
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        reply_markup = get_main_menu_keyboard()
        await context.bot.send_message(
            chat_id=query.from_user.id,
            text=(
                "üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞!</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:"
            ),
            parse_mode='HTML',
            reply_markup=reply_markup
        )
